apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocena
  namespace: gophie
spec:
  selector:
    matchLabels:
      app: ocena
  template:
    metadata:
      labels:
        app: ocena
    spec:
      containers:
      - name: ocena
        image: gcr.io/khidom/ocena
        envFrom:
          - configMapRef:
              name: ocena
#        resources:
#          limits:
#            memory: "128Mi"
#            cpu: "500m"
        ports:
        - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: ocena
  namespace: gophie
spec:
  type: ClusterIP
  selector:
    app: ocena
  ports:
  - port: 80
    targetPort: 8000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ocena
  namespace: gophie
data:
  DEBUG: "False"
  ALLOWED_HOSTS: "https://gophie.cam"
  DATABASE_URL: "postgres://postgres:se0bPu5lv7KSZPwYpdDlA2X5JurFO3YI5Wb5LgAaQwVJk4IY6EkdfVU7XfNnbYve@gophie-db.cs2f9oyb5wnu.eu-west-2.rds.amazonaws.com:5432/gophie"
  GOPHIE_ACCESS_KEY: "cfTOkAoTLnLXHEQP0J23wfQCusRolVrC"
  GOPHIE_HOST: "http://gophie.gophie"
  SCOUT_KEY: U3rZHP5VzI9NSeYZCzEr
  SCOUT_LOG_LEVEL: WARN
  SCOUT_MONITOR: "true"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    cert-manager.io/issue-temporary-certificate: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  name: ocena
  namespace: gophie
spec:
  ingressClassName: nginx
  rules:
  - host: ocena.gophie.cam
    http:
      paths:
      - pathType: ImplementationSpecific
        path: /
        backend:
          service:
            name: ocena
            port:
              number: 80
  tls:
  - hosts:
    - ocena.gophie.com
    secretName: ocena-gophie-com-tls
