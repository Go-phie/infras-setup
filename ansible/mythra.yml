---
- hosts: all
  become: yes

  vars:
    mythra_path: "/opt/mythra"
    mythra_web_port: 9000

  pre_tasks:
    - name: Update apt cache if needed.
      apt: update_cache=yes cache_valid_time=3600

    - name: Install packages
      apt:
        state: present
        pkg: [ 'jq', 'libncurses5', 'libncursesw5-dev', 'libssl-dev', 'pkg-config', 'unzip', 'lsof']

  tasks:
    - name: Install ChromeDriver
      tags: chromedriver
      include_role:
        name: chromedriver

    - name: Install Headless Chrome
      tags: chromedriver
      include_role:
        name: chrome

    - name: Get latest tag
      tags: mythra
      uri:
        url: https://api.github.com/repos/deven96/mythra/releases/latest
        method: GET
        return_content: yes
        status_code: 200
        body_format: json
      register: mythra_latest_release

    - name: Set Latest Release
      tags: mythra
      run_once: true
      set_fact:
        latest_tag: "{{ mythra_latest_release.json.tag_name }}"

    - name: Show Latest Tag
      tags: mythra
      debug:
        msg: "{{ latest_tag }}"

    - name: Download latest tag
      tags: mythra
      get_url:
        url: "{{ 'https://github.com/deven96/mythra/releases/download/{}/mythra-ubuntu-18.04-{}'.format(latest_tag, latest_tag) }}"
        dest: "{{ mythra_path }}"
        mode: "0755"
        force: yes
      notify:
        - Restart mythra

    - name: Create Chrome Driver service file
      tags: chromedriver
      ansible.builtin.template:
        src: templates/chromedriver.service.j2
        dest: /etc/systemd/system/chromedriver.service
      notify:
        - Start chromedriver

    - name: Create Mythra service file
      tags: mythra
      ansible.builtin.template:
        src: templates/mythra.service.j2
        dest: /etc/systemd/system/mythra.service
      notify:
        - Start mythra

    - name: Create Mythra cache busting cron
      ansible.builtin.cron:
        name: "mythra remove cache every 30 minutes"
        minute: "*/30"
        job: "sudo {{ mythra_path }} clear-cache >> /tmp/mythra-cache-clear.log 2>&1"
        user: "gcp"

  roles:
    - name: geerlingguy.nginx
      tags: nginx
      vars:
        nginx_vhosts:
          - listen: "443 ssl http2"
            server_name: "mythra.gophie.cam"
            state: "present"
            template: "{{ nginx_vhost_template }}"
            filename: "mythra.cam.conf"
            extra_parameters: |
              ssl_certificate     /etc/letsencrypt/live/mythra.gophie.cam/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/mythra.gophie.cam/privkey.pem;
              ssl_protocols       tlsv1.1 tlsv1.2;
              location / {
                proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
                proxy_set_header x-real-ip $remote_addr;
                proxy_set_header host $http_host;

                proxy_http_version 1.1;
                proxy_set_header upgrade $http_upgrade;
                proxy_set_header connection "upgrade";

                proxy_pass "http://localhost:{{ mythra_web_port }}/";
                proxy_redirect off;
                proxy_read_timeout 240s;
              }

          - listen: "80"
            server_name: "mythra.gophie.cam"
            return: "301 https://mythra.gophie.cam$request_uri"
            filename: "mythra.cam.80.conf"

    - name:  certbot
      tags: certbot
      vars:
        certbot_auto_renew_user: "gcp"
        certbot_auto_renew_options: "--quiet --no-self-upgrade --nginx"
        certbot_admin_email: gophiemythra@gmail.com
        certbot_create_if_missing: true
        certbot_auto_renew_minute: "20"
        certbot_auto_renew_hour: "5"
        certbot_certs:
          - domains:
            - mythra.gophie.cam
        certbot_create_method: nginx

  handlers:
    - name: Start mythra
      systemd:
        state: started
        name: mythra
        daemon_reload: yes

    - name: Restart mythra
      systemd:
        state: restarted
        name: mythra

    - name: Start chromedriver
      systemd:
        state: started
        name: chromedriver
        daemon_reload: yes
